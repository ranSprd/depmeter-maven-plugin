# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    branches:
        - 'release'

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'
#        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
        server-id: ossrh  # Value of the distributionManagement/repository/id field of the pom.xml
        server-username: MAVEN_OSSRH_USERNAME # env variable for username in deploy
        server-password: MAVEN_OSSRH_PWD # env variable for token in deploy        
        gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
        gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase

    - name: Configure Git user
      run: |
        git config user.email "actions@github.com"
        git config user.name "GitHub Actions"

    - name: Publish to Apache Maven Central
#      run: mvn --batch-mode release:prepare release:perform -s $GITHUB_WORKSPACE/settings.xml
      run: mvn --version
      env:
        GITHUB_TOKEN: ${{ github.token }}
        MAVEN_OSSRH_USERNAME: Nagel
        MAVEN_OSSRH_PWD: ${{ secrets.MAVEN_OSSRH_PWD }}        
        MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
    
    - name: Set up Java for publishing to GitHub Packages
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'
    - name: Publish to GitHub Packages
      run: mvn --batch-mode deploy
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}        
        
  merge:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    needs: [build]

    steps:
    - uses: actions/checkout@v3
        
    - name: Configure Git user
      run: |
        git config user.email "actions@github.com"
        git config user.name "GitHub Actions"

    - name: Merge back to master
      run: |
          git fetch --unshallow
          git checkout master
          git pull
          git rebase release master
          git push